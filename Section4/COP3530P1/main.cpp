#include <iostream>
#include <SparseMatrix.h>
#include <string>

int main()
{
    SparseMatrix m1;
    m1.setSize(3, 3);
    std::cout << "Num Rows is 3: " << m1.getNumRows() << std::endl;
    std::cout << "Num Cols is 3: " << m1.getNumCols() << std::endl;
    m1.addElement(0, 0, 16);
    m1.addElement(0, 1, 4);
    m1.removeElement(0, 1);
    std::cout << m1.toString() << std::endl;
    m1.removeElement(0, 0);
    m1.addElement(2, 2, 4);
    m1.addElement(1, 0, -3);
    std::cout << m1.toString() << std::endl;
    m1.removeElement(2, 2);
    m1.removeElement(1, 0);
    m1.addElement(0, 0, 0);
    std::cout << m1.toString() << std::endl;
    m1.addElement(0, 1, 3);
    m1.addElement(0, 1, 0);
    std::cout << m1.toString() << std::endl;
    m1.addElement(0, 0, 16);
    m1.addElement(0, 1, 4);
    m1.addElement(1, 1, 9);
    m1.addElement(2, 2, 7);
    SparseMatrix addTest1;
    addTest1.setSize(3, 3);
    addTest1.addElement(0, 0, 1);
    addTest1.addElement(1, 1, 2);
    addTest1.addElement(2, 2, 3);
    SparseMatrix addTest2;
    addTest2.setSize(3, 3);
    addTest2.addElement(0, 0, 3);
    addTest2.addElement(0, 0, 2);
    addTest2.addElement(0, 0, 1);
    SparseMatrix addTest3 = addTest1.addMatricies(addTest2);
    std::cout << "added matrix: " << std::endl;
    std::cout << addTest3.toString() << std::endl;
    SparseMatrix multiplyTest1;
    multiplyTest1.setSize(3, 3);
    multiplyTest1.addElement(0, 0, 1);
    multiplyTest1.addElement(0, 1, 1);
    multiplyTest1.addElement(0, 2, 1);
    SparseMatrix multiplyTest2;
    multiplyTest2.setSize(3, 3);
    multiplyTest2.addElement(0, 0, 1);
    multiplyTest2.addElement(1, 0, 1);
    multiplyTest2.addElement(2, 0, 1);
    multiplyTest2.addElement(0, 1, 2);
    multiplyTest2.addElement(1, 1, 1);
    multiplyTest2.addElement(2, 1, 1);
    multiplyTest2.addElement(0, 2, 3);
    multiplyTest2.addElement(1, 2, 1);
    multiplyTest2.addElement(2, 2, 1);
    SparseMatrix multiplyTest3 = multiplyTest1.multiplyMatricies(multiplyTest2);
    std::cout << "multiplied matricies: " << std::endl;
    std::cout << multiplyTest3.toString() << std::endl;
    SparseMatrix mul1(3,2);
    SparseMatrix mul2(2,3);
    mul1.addElement(0, 0, 3);
    mul1.addElement(0, 1, 4);
    mul1.addElement(1, 0, 7);
    mul1.addElement(1, 1, 2);
    mul1.addElement(2, 0, 5);
    mul1.addElement(2, 1, 9);
    mul2.addElement(0, 0, 3);
    mul2.addElement(0, 1, 1);
    mul2.addElement(0, 2, 5);
    mul2.addElement(1, 0, 6);
    mul2.addElement(1, 1, 9);
    mul2.addElement(1, 2, 7);
    SparseMatrix mul3 = mul1.multiplyMatricies(mul2);
    std::cout << "multiplied: " << std::endl;
    std::cout << mul3.toString() << std::endl;
    std::cout << "determinant of mul3: " << mul3.getDet() << std::endl;
    SparseMatrix a(4,4);
    a.addElement(0,0,1);
    a.addElement(0,1,0);
    a.addElement(0,2,4);
    a.addElement(0,3,-6);
    a.addElement(1,0,2);
    a.addElement(1,1,5);
    a.addElement(1,2,0);
    a.addElement(1,3,3);
    a.addElement(2,0,-1);
    a.addElement(2,1,2);
    a.addElement(2,2,3);
    a.addElement(2,3,5);
    a.addElement(3,0,2);
    a.addElement(3,1,1);
    a.addElement(3,3,-2);
    a.addElement(3,3,3);
    std::cout << "determinant of a: " << a.getDet() << std::endl;
    return 0;
}